<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Greetings Management - WhatsApp Bot</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
</head>
<body class="bg-gray-100">
    <nav class="bg-green-600 text-white shadow-lg">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex justify-between items-center h-16">
                <div class="flex items-center">
                    <i class="fab fa-whatsapp text-2xl mr-2"></i>
                    <span class="text-xl font-bold">WhatsApp Bot</span>
                </div>
                <div class="flex items-center space-x-4">
                    <a href="/dashboard" class="hover:bg-green-700 px-3 py-2 rounded-md">
                        <i class="fas fa-tachometer-alt mr-2"></i>Dashboard
                    </a>
                    <a href="/keywords" class="hover:bg-green-700 px-3 py-2 rounded-md">
                        <i class="fas fa-key mr-2"></i>Keywords
                    </a>
                    <a href="/greetings" class="bg-green-700 px-3 py-2 rounded-md">
                        <i class="fas fa-hand-wave mr-2"></i>Greetings
                    </a>
                    <a href="/settings" class="hover:bg-green-700 px-3 py-2 rounded-md">
                        <i class="fas fa-cog mr-2"></i>Settings
                    </a>
                    <div class="border-l border-green-500 h-6 mx-2"></div>
                    <span class="text-sm">Welcome, <%= user.username %></span>
                    <a href="/logout" class="hover:bg-red-600 px-3 py-2 rounded-md">
                        <i class="fas fa-sign-out-alt mr-2"></i>Logout
                    </a>
                </div>
            </div>
        </div>
    </nav>

    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <div class="mb-8">
            <h1 class="text-3xl font-bold text-gray-900">Greetings Management</h1>
            <p class="text-gray-600">Manage greeting keywords and responses</p>
        </div>

        <!-- Add New Greeting -->
        <div class="bg-white rounded-lg shadow-md p-6 mb-8">
            <h2 class="text-xl font-bold text-gray-900 mb-4">Add New Greeting</h2>
            <form id="greetingForm" class="space-y-4">
                <div>
                    <label for="keywords" class="block text-sm font-medium text-gray-700 mb-2">Greeting Keywords</label>
                    <input 
                        type="text" 
                        id="keywords" 
                        name="keywords" 
                        required 
                        class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500"
                        placeholder="e.g., hello, hi, hey, good morning (separate with commas)"
                    >
                    <p class="text-sm text-gray-500 mt-1">Enter multiple keywords separated by commas</p>
                </div>
                <div>
                    <label for="response" class="block text-sm font-medium text-gray-700 mb-2">Response</label>
                    <textarea 
                        id="response" 
                        name="response" 
                        required 
                        rows="4"
                        class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500"
                        placeholder="Enter the greeting response message..."
                    ></textarea>
                </div>
                <div class="flex justify-end">
                    <button 
                        type="submit" 
                        class="bg-green-600 text-white px-6 py-2 rounded-lg hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2 transition duration-200"
                    >
                        <i class="fas fa-plus mr-2"></i>Add Greeting
                    </button>
                </div>
            </form>
        </div>

        <!-- Greetings List -->
        <div class="bg-white rounded-lg shadow-md">
            <div class="px-6 py-4 border-b border-gray-200">
                <h2 class="text-xl font-bold text-gray-900">Active Greetings</h2>
            </div>
            <div class="p-6">
                <div id="greetingsList" class="space-y-4">
                    <!-- Greetings will be loaded here -->
                </div>
                <div id="noGreetings" class="text-center py-8 text-gray-500" style="display: none;">
                    <i class="fas fa-hand-wave text-4xl mb-4"></i>
                    <p>No greetings configured yet. Add your first greeting above!</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit Modal -->
    <div id="editModal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50" style="display: none;">
        <div class="bg-white rounded-lg p-6 w-full max-w-md">
            <h3 class="text-xl font-bold text-gray-900 mb-4">Edit Greeting</h3>
            <form id="editForm">
                <input type="hidden" id="editId">
                <div class="space-y-4">
                    <div>
                        <label for="editKeywords" class="block text-sm font-medium text-gray-700 mb-2">Greeting Keywords</label>
                        <input 
                            type="text" 
                            id="editKeywords" 
                            name="keywords" 
                            required 
                            class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500"
                        >
                        <p class="text-sm text-gray-500 mt-1">Enter multiple keywords separated by commas</p>
                    </div>
                    <div>
                        <label for="editResponse" class="block text-sm font-medium text-gray-700 mb-2">Response</label>
                        <textarea 
                            id="editResponse" 
                            name="response" 
                            required 
                            rows="4"
                            class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500"
                        ></textarea>
                    </div>
                    <div class="flex items-center">
                        <input type="checkbox" id="editActive" name="active" class="h-4 w-4 text-green-600 focus:ring-green-500 border-gray-300 rounded">
                        <label for="editActive" class="ml-2 block text-sm text-gray-900">Active</label>
                    </div>
                </div>
                <div class="flex justify-end space-x-4 mt-6">
                    <button 
                        type="button" 
                        onclick="closeEditModal()"
                        class="px-4 py-2 text-gray-600 hover:text-gray-800"
                    >
                        Cancel
                    </button>
                    <button 
                        type="submit" 
                        class="bg-green-600 text-white px-6 py-2 rounded-lg hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2 transition duration-200"
                    >
                        Update
                    </button>
                </div>
            </form>
        </div>
    </div>

    <script>
        let greetings = [];

        // Load greetings
        async function loadGreetings() {
            try {
                const response = await fetch('/api/greetings');
                greetings = await response.json();
                renderGreetings();
            } catch (error) {
                console.error('Error loading greetings:', error);
            }
        }

        // Render greetings
        function renderGreetings() {
            const greetingsList = document.getElementById('greetingsList');
            const noGreetings = document.getElementById('noGreetings');

            if (greetings.length === 0) {
                greetingsList.innerHTML = '';
                noGreetings.style.display = 'block';
                return;
            }

            noGreetings.style.display = 'none';
            greetingsList.innerHTML = greetings.map(greeting => `
                <div class="border border-gray-200 rounded-lg p-4 ${greeting.active ? 'bg-purple-50 border-purple-200' : 'bg-gray-50'}">
                    <div class="flex justify-between items-start">
                        <div class="flex-1">
                            <div class="flex items-center mb-2">
                                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${greeting.active ? 'bg-purple-100 text-purple-800' : 'bg-gray-100 text-gray-800'}">
                                    ${greeting.active ? 'Active' : 'Inactive'}
                                </span>
                                <span class="ml-2 text-sm text-gray-500">Created: ${new Date(greeting.createdAt).toLocaleDateString()}</span>
                            </div>
                            <h3 class="text-lg font-medium text-gray-900 mb-2">
                                <i class="fas fa-hand-wave mr-2 text-purple-600"></i>Keywords: ${greeting.keywords.join(', ')}
                            </h3>
                            <p class="text-gray-600 whitespace-pre-wrap">${greeting.response}</p>
                        </div>
                        <div class="flex space-x-2 ml-4">
                            <button 
                                onclick="editGreeting(${greeting.id})"
                                class="text-blue-600 hover:text-blue-800 p-2"
                                title="Edit"
                            >
                                <i class="fas fa-edit"></i>
                            </button>
                            <button 
                                onclick="deleteGreeting(${greeting.id})"
                                class="text-red-600 hover:text-red-800 p-2"
                                title="Delete"
                            >
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>
                    </div>
                </div>
            `).join('');
        }

        // Add greeting
        document.getElementById('greetingForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const formData = new FormData(e.target);
            const keywordsString = formData.get('keywords');
            const keywords = keywordsString.split(',').map(k => k.trim()).filter(k => k);
            
            const data = {
                keywords: keywords,
                response: formData.get('response')
            };

            try {
                const response = await fetch('/api/greetings', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                });

                if (response.ok) {
                    e.target.reset();
                    loadGreetings();
                } else {
                    alert('Error adding greeting');
                }
            } catch (error) {
                console.error('Error adding greeting:', error);
                alert('Error adding greeting');
            }
        });

        // Edit greeting
        function editGreeting(id) {
            const greeting = greetings.find(g => g.id === id);
            if (!greeting) return;

            document.getElementById('editId').value = id;
            document.getElementById('editKeywords').value = greeting.keywords.join(', ');
            document.getElementById('editResponse').value = greeting.response;
            document.getElementById('editActive').checked = greeting.active;
            document.getElementById('editModal').style.display = 'flex';
        }

        // Close edit modal
        function closeEditModal() {
            document.getElementById('editModal').style.display = 'none';
        }

        // Update greeting
        document.getElementById('editForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const formData = new FormData(e.target);
            const id = formData.get('id') || document.getElementById('editId').value;
            const keywordsString = formData.get('keywords');
            const keywords = keywordsString.split(',').map(k => k.trim()).filter(k => k);
            
            const data = {
                keywords: keywords,
                response: formData.get('response'),
                active: formData.has('active')
            };

            try {
                const response = await fetch(`/api/greetings/${id}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                });

                if (response.ok) {
                    closeEditModal();
                    loadGreetings();
                } else {
                    alert('Error updating greeting');
                }
            } catch (error) {
                console.error('Error updating greeting:', error);
                alert('Error updating greeting');
            }
        });

        // Delete greeting
        async function deleteGreeting(id) {
            if (!confirm('Are you sure you want to delete this greeting?')) return;

            try {
                const response = await fetch(`/api/greetings/${id}`, {
                    method: 'DELETE'
                });

                if (response.ok) {
                    loadGreetings();
                } else {
                    alert('Error deleting greeting');
                }
            } catch (error) {
                console.error('Error deleting greeting:', error);
                alert('Error deleting greeting');
            }
        }

        // Close modal when clicking outside
        document.getElementById('editModal').addEventListener('click', (e) => {
            if (e.target === document.getElementById('editModal')) {
                closeEditModal();
            }
        });

        // Load greetings on page load
        loadGreetings();
    </script>
</body>
</html>
